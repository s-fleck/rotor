% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cache.R
\name{Cache}
\alias{Cache}
\title{A simple file system cache}
\description{
A simple file system cache

A simple file system cache
}
\examples{

## ------------------------------------------------
## Method `Cache$new`
## ------------------------------------------------

td <- file.path(tempdir(), "cache-test")

# When using a real hash function as hashfun, identical objects will only
# be added to the cache once
cache_hash <- Cache$new(td, hashfun = digest::digest)
cache_hash$push(iris)
cache_hash$push(iris)
cache_hash$files
cache_hash$purge()

# To override this behaviour use a generator for unique ids, such as uuid
if (requireNamespace("uuid")){
  cache_uid <- Cache$new(td, hashfun = function(x) uuid::UUIDgenerate())
  cache_uid$push(iris)
  cache_uid$push(iris)
  cache_uid$files
  cache_uid$purge()
}

unlink(td, recursive = TRUE)
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{dir}}{a \code{character} scalar. path of the directory in which to store
the cache files}

\item{\code{hashfun}}{\code{NULL} or a \code{function} to generate a unique hash from the
object to be cached (see example). The hash \emph{must} be a text string
that is a valid filename on the target system. If \verb{$hashfun} is \code{NULL},
a storage key must be supplied manually in \code{cache$push()}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Cache$new()}}
\item \href{#method-push}{\code{Cache$push()}}
\item \href{#method-read}{\code{Cache$read()}}
\item \href{#method-remove}{\code{Cache$remove()}}
\item \href{#method-pop}{\code{Cache$pop()}}
\item \href{#method-prune}{\code{Cache$prune()}}
\item \href{#method-purge}{\code{Cache$purge()}}
\item \href{#method-print}{\code{Cache$print()}}
\item \href{#method-set_dir}{\code{Cache$set_dir()}}
\item \href{#method-set_max_files}{\code{Cache$set_max_files()}}
\item \href{#method-set_max_age}{\code{Cache$set_max_age()}}
\item \href{#method-set_max_size}{\code{Cache$set_max_size()}}
\item \href{#method-set_compression}{\code{Cache$set_compression()}}
\item \href{#method-set_hashfun}{\code{Cache$set_hashfun()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$new(
  dir = dirname(file),
  max_files = Inf,
  max_size = Inf,
  max_age = Inf,
  compression = FALSE,
  hashfun = digest::digest,
  create_dir = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{compression}}{}

\item{\code{create_dir}}{\code{logical} scalar. If \code{TRUE} \code{dir} is created if it
does not exist.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{td <- file.path(tempdir(), "cache-test")

# When using a real hash function as hashfun, identical objects will only
# be added to the cache once
cache_hash <- Cache$new(td, hashfun = digest::digest)
cache_hash$push(iris)
cache_hash$push(iris)
cache_hash$files
cache_hash$purge()

# To override this behaviour use a generator for unique ids, such as uuid
if (requireNamespace("uuid")){
  cache_uid <- Cache$new(td, hashfun = function(x) uuid::UUIDgenerate())
  cache_uid$push(iris)
  cache_uid$push(iris)
  cache_uid$files
  cache_uid$purge()
}

unlink(td, recursive = TRUE)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-push"></a>}}
\if{latex}{\out{\hypertarget{method-push}{}}}
\subsection{Method \code{push()}}{
push a new object to the cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$push(x, key = self$hashfun(x))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{a \code{character} scalar. Key under which to store the cached
object. Must be a valid filename. Defaults to beeing generated by
\verb{$hashfun()} but may also be supplied manually.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a \code{character} scalar: the key of the newly added object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read"></a>}}
\if{latex}{\out{\hypertarget{method-read}{}}}
\subsection{Method \code{read()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$read(key)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-remove"></a>}}
\if{latex}{\out{\hypertarget{method-remove}{}}}
\subsection{Method \code{remove()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$remove(key)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pop"></a>}}
\if{latex}{\out{\hypertarget{method-pop}{}}}
\subsection{Method \code{pop()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$pop(key)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prune"></a>}}
\if{latex}{\out{\hypertarget{method-prune}{}}}
\subsection{Method \code{prune()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$prune(
  max_files = self$max_files,
  max_size = self$max_size,
  max_age = self$max_age,
  now = Sys.time()
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-purge"></a>}}
\if{latex}{\out{\hypertarget{method-purge}{}}}
\subsection{Method \code{purge()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$purge()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dir"></a>}}
\if{latex}{\out{\hypertarget{method-set_dir}{}}}
\subsection{Method \code{set_dir()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$set_dir(x, create = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_max_files"></a>}}
\if{latex}{\out{\hypertarget{method-set_max_files}{}}}
\subsection{Method \code{set_max_files()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$set_max_files(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_max_age"></a>}}
\if{latex}{\out{\hypertarget{method-set_max_age}{}}}
\subsection{Method \code{set_max_age()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$set_max_age(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_max_size"></a>}}
\if{latex}{\out{\hypertarget{method-set_max_size}{}}}
\subsection{Method \code{set_max_size()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$set_max_size(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_compression"></a>}}
\if{latex}{\out{\hypertarget{method-set_compression}{}}}
\subsection{Method \code{set_compression()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$set_compression(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_hashfun"></a>}}
\if{latex}{\out{\hypertarget{method-set_hashfun}{}}}
\subsection{Method \code{set_hashfun()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cache$set_hashfun(x)}\if{html}{\out{</div>}}
}

}
}
